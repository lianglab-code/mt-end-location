function [param_out, res, exitflag] = fit_one_mt_end(img, ...
                                                     crop_radius, ...
                                                     coarse_center, ...
                                                     coarse_dir)
    %% FIT_ONE_MT_END fits one image to 2d filament end
    % original reference: fit_2d_filament_end.m

    % Inputs:
    % img: one image
    % crop_radius: the radius of cropped image used in fitting
    % coarse_center: coarse center
    % coarse_dir: coarse direction

    % param_out:
    % 1. x0
    % 2. y0
    % 3. sigma
    % 4. theta
    % 5. amplitude
    % 6. baseline

    % exitflag:
    % 1 Function converged to a solution x.
    % 2 Change in x was less than the specified tolerance.
    % 3 Change in the residual was less than the specified tolerance.
    % 4 Magnitude of search direction was smaller than the specified tolerance.
    % 0 Number of iterations exceeded options.MaxIterations or number of function evaluations exceeded options.MaxFunctionEvaluations.
    % -1 Output function terminated the algorithm.
    % -2 Problem is infeasible: the bounds lb and ub are inconsistent. 

    [h, w] = size(img);    
    thres_theta = pi/6;
    sigma0 = 3.0;
    theta0 = coarse_dir;

    param_out = nan(1, 6);
    res = nan(1,1);
    exitflag = nan(1,1);

    % cropping
    cropped = zeros(2*crop_radius+1, 2*crop_radius+1);
    x0 = round(real(coarse_center));
    y0 = round(imag(coarse_center));
    if ((y0-crop_radius) < 1) | ...
            ((y0+crop_radius) > h) | ...
            ((x0-crop_radius) < 1) | ...
            ((x0+crop_radius) > w)
        return;
    end
    cropped = img(y0-crop_radius:y0+crop_radius, ...
                  x0-crop_radius:x0+crop_radius);
    
    % fitting
    [xg, yg] = meshgrid(1:(2*crop_radius+1), 1:(2*crop_radius+1));
    xdata = cat(3, xg, yg);

    %    OPTIONS = optimoptions('lsqcurvefit', ...
    %                         'Algorithm', 'levenberg-marquardt', ...
    %                         'Display','off');
    OPTIONS = optimoptions('lsqcurvefit', ...
                           'Algorithm', 'trust-region-reflective', ...
                           'Display','off');

    x0 = 1+crop_radius;
    y0 = 1+crop_radius;
    max_v = max(cropped(:));
    min_v = min(cropped(:));
    param_in = [x0 ...
                y0 ...
                sigma0 ...
                theta0 ...
                (max_v-min_v) ...
                min_v ];
    param_lb = [1 ...
                1 ...
                1/3*sigma0 ...
                theta0-thres_theta ...
                0.5*param_in(5) ...
                0.0 ];
    param_ub = [1+2*crop_radius ...
                1+2*crop_radius ...
                5/3*sigma0 ...
                theta0+thres_theta ...
                1.5*param_in(5) ...
                0.5*(max_v+min_v) ]; 

    [a, b, ~, c, ~] = ...
        lsqcurvefit(@FilamentTip2D, ...
                    param_in, ...
                    xdata, ...
                    cropped, ...
                    param_lb, ...
                    param_ub, ...
                    OPTIONS);
    res = b;
    exitflag = c;
    param_out(1:6) = a;
    param_out(1) = real(coarse_center) ...
        + param_out(1) ...
        - (1+crop_radius);
    param_out(2) = imag(coarse_center) ...
        + param_out(2) ...
        - (1+crop_radius);
    

end