Function [param_out, res, exitflag] = ...
    fit_filament_end(img, r0, x0, y0, t0)
%% FIT_FILAMENT_END fits one image to 2d filament end
%
% Inputs:
% img: one image
% r0: the radius of cropped image used in fitting
% x0: coarse center x
% y0: coarse center y
% t0: coarse direction
%
% Outputs:
%
% param_out:
% 1. x0
% 2. y0
% 3. sigma
% 4. theta
% 5. amplitude
% 6. baseline
%
% exitflag:
% 1 Function converged to a solution x.
% 2 Change in x was less than the specified tolerance.
% 3 Change in the residual was less than the specified tolerance.
% 4 Magnitude of search direction was smaller than the specified tolerance.
% 0 Number of iterations exceeded options.MaxIterations or number of function evaluations exceeded options.MaxFunctionEvaluations.
% -1 Output function terminated the algorithm.
% -2 Problem is infeasible: the bounds lb and ub are inconsistent. 
%
% Note:
% Original reference: Fiesta of microtubule
% Direction convention:

SIGMA = 3.0;
THRES_THETA = pi/6;

[h, w] = size(img);    
sigma0 = SIGMA;
theta0 = t0;

param_out = nan(1, 6);
res = nan(1,1);
exitflag = nan(1,1);

% cropping
cropped = zeros(2*r0+1, 2*r0+1);
% x0 = round(real(c0));
% y0 = round(imag(c0));
% c0 to store the original coord
c0 = x0 + sqrt(-1)*y0;
if ((y0-r0) < 1) | ...
        ((y0+r0) > h) | ...
        ((x0-r0) < 1) | ...
        ((x0+r0) > w)
    return;
end
cropped = img(y0-r0:y0+r0, ...
              x0-r0:x0+r0);

% fitting
[xg, yg] = meshgrid(1:(2*r0+1), 1:(2*r0+1));
xdata = cat(3, xg, yg);

%    OPTIONS = optimoptions('lsqcurvefit', ...
%                         'Algorithm', 'levenberg-marquardt', ...
%                         'Display','off');
OPTIONS = optimoptions('lsqcurvefit', ...
                       'Algorithm', 'trust-region-reflective', ...
                       'Display','off');

x0 = 1+r0;
y0 = 1+r0;
max_v = max(cropped(:));
min_v = min(cropped(:));
param_in = [x0 ...
            y0 ...
            sigma0 ...
            theta0 ...
            (max_v-min_v) ...
            min_v ];
param_lb = [1 ...
            1 ...
            1/3*sigma0 ...
            theta0-THRES_THETA ...
            0.5*param_in(5) ...
            0.0 ];
param_ub = [1+2*r0 ...
            1+2*r0 ...
            5/3*sigma0 ...
            theta0+THRES_THETA ...
            1.5*param_in(5) ...
            0.5*(max_v+min_v) ]; 

[a, b, ~, c, ~] = ...
    lsqcurvefit(@FilamentTip2D, ...
                param_in, ...
                xdata, ...
                cropped, ...
                param_lb, ...
                param_ub, ...
                OPTIONS);
res = b;
exitflag = c;
param_out(1:6) = a;
param_out(1) = real(c0) ...
    + param_out(1) ...
    - (1+r0);
param_out(2) = imag(c0) ...
    + param_out(2) ...
    - (1+r0);